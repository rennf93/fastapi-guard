name: Publish to PyPI

on:
  release:
    types: [created]

jobs:
  publish:
    runs-on: ubuntu-latest
    # environment: pypi
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Send Initial Slack Message
        id: send_initial_slack_release
        uses: rennf93/good-comms@master
        with:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK }}'
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          STATUS: 'Started'
          CHANNEL_ID: '${{ secrets.SLACK_CHANNEL }}'
          AUTHOR_NAME: 'FastAPI Guard - Pypi Release'
          AUTHOR_LINK: 'https://github.com/rennf93/fastapi-guard'
          AUTHOR_ICON: ':rocket:'
          TITLE: 'Pypi Release Started'
          TITLE_LINK: 'https://github.com/rennf93/fastapi-guard/actions'
          MESSAGE: |
            .
            *NEW VERSION v${{ github.event.release.tag_name }} TRIGGERED PYPI RELEASE!*

            Commit:
              ${{ github.event.head_commit.message }}
            .
          COLOR: warning

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build package
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
        run: |
          twine upload dist/*
          echo "VERSION=${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - name: Get and Update Version
        id: get_version
        run: |
          CURRENT_VERSION=$(yq -r '.aliases.latest' .mike.yml)

          if [[ ! $CURRENT_VERSION =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "::error::Invalid version format in .mike.yml: $CURRENT_VERSION"
            exit 1
          fi
          echo "CURRENT_VERSION=$CURRENT_VERSION" >> $GITHUB_ENV

          if [[ -n "${{ secrets.DOCS_VERSION }}" ]]; then
            STORED_VERSION=${{ secrets.DOCS_VERSION }}
            echo "STORED_VERSION=$STORED_VERSION" >> $GITHUB_ENV
          else
            echo "::error::DOCS_VERSION secret not found"
            exit 1
          fi

          if [[ "$CURRENT_VERSION" != "$STORED_VERSION" ]]; then
            echo "::notice::Updating DOCS_VERSION from $STORED_VERSION to $CURRENT_VERSION"
            echo "VERSION=$CURRENT_VERSION" >> $GITHUB_ENV
            echo "UPDATE_SECRET=true" >> $GITHUB_ENV
          else
            echo "::notice::Versions match ($CURRENT_VERSION), no update needed"
            echo "VERSION=$STORED_VERSION" >> $GITHUB_ENV
            echo "UPDATE_SECRET=false" >> $GITHUB_ENV
          fi

      - name: Update Docs Version Secret
        if: ${{ env.UPDATE_SECRET == 'true' }}
        uses: rennf93/github-actions-secrets-mgmt@v1.5
        with:
          OWNER: ${{ github.repository_owner }}
          REPOSITORY: ${{ github.event.repository.name }}
          ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SECRET_NAME: DOCS_VERSION
          SECRET_VALUE: ${{ github.event.release.tag_name }}

      - name: Notify Success on Slack Channel
        uses: rennf93/good-comms@master
        with:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK }}'
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          STATUS: 'Success'
          CHANNEL_ID: '${{ secrets.SLACK_CHANNEL }}'
          AUTHOR_NAME: 'FastAPI Guard - Pypi Release'
          AUTHOR_LINK: 'https://github.com/rennf93/fastapi-guard'
          AUTHOR_ICON: ':gem:'
          TITLE: 'Pypi Release Successful'
          TITLE_LINK: 'https://github.com/rennf93/fastapi-guard/actions'
          MESSAGE: |
            .
            *Pypi Release v${{ github.event.release.tag_name }} Successful!*
            .
            Commit message:
              ${{ github.event.head_commit.message }}

            Commit URL:
              ${{ github.event.head_commit.url }}
            .
          COLOR: good
          SLACK_THREAD_TS: ${{ steps.send_initial_slack_release.outputs.SLACK_THREAD_TS }}

      - name: Send Failure Notification to Slack
        if: failure()
        uses: rennf93/good-comms@master
        with:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHOOK }}'
          SLACK_TOKEN: ${{ secrets.SLACK_TOKEN }}
          STATUS: 'Failed'
          CHANNEL_ID: '${{ secrets.SLACK_CHANNEL }}'
          AUTHOR_NAME: 'FastAPI Guard - Pypi Release'
          AUTHOR_LINK: 'https://github.com/rennf93/fastapi-guard'
          AUTHOR_ICON: ':skull:'
          TITLE: 'Pypi Release Failed'
          TITLE_LINK: 'https://github.com/rennf93/fastapi-guard/actions'
          MESSAGE: |
            .
            *Pypi Release v${{ github.event.release.tag_name }} Failed!*
            .
            Pypi Release failed for commit:
              ${{ github.event.head_commit.message }}

            Commit URL:
              ${{ github.event.head_commit.url }}

            Please check the logs for more details.
            .
          COLOR: danger
          SLACK_THREAD_TS: ${{ steps.send_initial_slack_release.outputs.SLACK_THREAD_TS }}